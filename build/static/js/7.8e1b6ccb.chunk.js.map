{"version":3,"sources":["pages/DetailArticle/index.js","servers/index.js","utils/utils.js","components/Login/index.js","components/Register/index.js","components/Header/index.js","assets/imgs/default_avatar.jpg","components/Aside/index.js","assets/imgs/banner02.jpg"],"names":["DetailArticle","state","title","nickname","create_time","heart_count","has_heart","introduce","content","last_id","last_title","next_id","next_title","messages","messages_count","browse_count","message_input","topic_id","topicId","this","props","match","params","username","getArticle","ScrollTop","getArticleDetail","then","res","code","data","limit","article_type","id","created_time","map","item","showInput","replyContent","setState","message","error","newProps","new_topic_id","new_username","index","e","target","value","submitMessage","push","success","messageId","message_id","replyMessage","replys","Modal","confirm","cancelText","okText","onOk","deleteMessage","filter","messageIndex","replyIndex","replyId","reply_id","deleteReply","deleteHeart","addHeart","userInfo","localStorage","getItem","JSON","parse","className","style","marginBottom","paddingRight","onClick","history","dangerouslySetInnerHTML","__html","bind","to","key","author","author_id","type","marginRight","src","meida_url","avatar","alt","replyItem","placeholder","onChange","inputReply","submitReply","length","textAlign","Component","host","updateUser","putMethod","getUser","getMethod","uploadImg","postMehotd","register","login","submitArticle","updateArticle","messaegId","deleteMethod","topicList","deleteTopcic","homeTopicList","topicBrowseRank","topicRecommend","topicCarousel","searchTopic","url","Promise","resolve","reject","token","axios","get","headers","Authorization","undefined","catch","err","delete","post","put","number","time","document","body","scrollTop","documentElement","spacingTime","spacingInex","nowTop","everTop","scrollTimer","setInterval","clearInterval","Login","validate","registerFormStatus","flag","test","help","status","password","setItem","setUserInfo","stringify","loginClose","width","visible","loginVisiable","onCancel","footer","block","loading","loginLoading","showRegister","Register","password2","password1","email","password_1","password_2","registerClose","registerVisiable","Header","searchText","current","removeItem","window","location","href","info","trim","open","data-toggle","data-target","aria-controls","aria-expanded","aria-label","toMyList","toPushlish","paddingBottom","onSearch","default_avatar","logout","module","exports","Slide","rankList","recommendList","getTopicBrowseRank","getTopicRecommend","topics","images","default_img","hideRank","display"],"mappings":"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","file":"static/js/7.8e1b6ccb.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Header from '../../components/Header'\nimport { getArticleDetail, replyMessage, submitMessage, deleteReply, deleteMessage, addHeart, deleteHeart } from '../../servers/index'\nimport './index.css'\nimport { Link } from 'react-router-dom'\nimport { meida_url ,ScrollTop} from '../../utils/utils'\nimport { message, Modal } from 'antd'\nimport Slide from '../../components/Aside'\n\nclass DetailArticle extends Component {\n    constructor() {\n        super()\n        this.state = {\n            title: \"\",\n            nickname: \"\",\n            create_time: \"\",\n            heart_count: 0,\n            has_heart: false,\n            introduce: \"\",\n            content: \"\",\n            last_id: null,\n            last_title: null,\n            next_id: null,\n            next_title: null,\n            messages: [],\n            messages_count: 0,\n            browse_count: 0,\n            message_input: \"\", //留言内容\n            topic_id:\"\"\n\n        }\n    }\n    componentDidMount() {\n        const topicId = this.props.match.params.topic_id\n        const username = this.props.match.params.username\n        this.getArticle(topicId,username)\n        ScrollTop(0,200)\n    }\n\n    getArticle(topicId,username) {\n        getArticleDetail({ topic_id: topicId, }, username).then(res => {\n            if (res.code === 200) {\n                let { content, limit, article_type, title, introduce, nickname, last_id, last_title,id,\n                    next_id, next_title, messages, messages_count, browse_count, heart_count, has_heart, created_time\n                } = res.data\n                messages = messages.map(item => {\n                    item.showInput = false\n                    item.replyContent = \"\"\n                    return item\n                })\n                if (limit === 'public') {\n                    limit = 0\n                } else {\n                    limit = 1\n                }\n                this.setState({\n                    content, limit, article_type, title, introduce, nickname, last_id, last_title, created_time,\n                    next_id, next_title, messages, messages_count, browse_count, heart_count, has_heart,topic_id:id,\n                })\n\n            }else{\n                message.error(res.error)\n            }\n        })\n\n    }\n    UNSAFE_componentWillReceiveProps(newProps) {\n        const topic_id = this.props.match.params.topic_id\n        const username = this.props.match.params.username\n        const new_topic_id = newProps.match.params.topic_id\n        const new_username = newProps.match.params.username\n        if (new_topic_id !== topic_id || username!== new_username) {\n            this.getArticle(new_topic_id,new_username)\n            ScrollTop(0,200)\n        }\n\n    }\n    showInput(index) {\n        const { messages } = this.state\n        messages[index].showInput = !messages[index].showInput\n        this.setState({ messages })\n    }\n    inputReply(e, index) {\n        const { messages } = this.state\n        messages[index].replyContent = e.target.value\n        this.setState({ messages })\n    }\n\n    submitMessage() {\n        let { message_input, messages } = this.state\n        const topic_id = this.props.match.params.topic_id\n        submitMessage({ content: message_input }, topic_id).then(res => {\n            if (res.code === 200) {\n                messages.push(res.data)\n                message_input = \"\"\n                this.setState({ message_input, messages })\n                message.success(\"留言成功！\")\n            } else {\n                message.error(res.error)\n            }\n        })\n    }\n\n    submitReply(index) {\n        const { messages } = this.state\n        const topic_id = this.props.match.params.topic_id\n        const content = messages[index].replyContent\n        const messageId = messages[index].message_id\n        replyMessage({ content }, topic_id, messageId).then(res => {\n            if (res.code === 200) {\n                messages[index].replys.push(res.data)\n                messages[index].replyContent = \"\"\n                messages[index].showInput = false\n                this.setState({ messages })\n                message.success(\"回复成功！\")\n            } else {\n                message.error(res.error)\n            }\n        })\n\n    }\n\n    deleteMessage(index) {\n        Modal.confirm({\n            title: '确定要删除吗？',\n            cancelText: '取消',\n            okText: \"确定\",\n            onOk: () => {\n                let { messages } = this.state\n                const topic_id = this.props.match.params.topic_id\n                const messageId = messages[index].message_id\n                const data = {\n                    topicId: topic_id,\n                    messageId,\n                }\n                deleteMessage(data).then(res => {\n                    if (res.code === 200) {\n                        messages = messages.filter(item => {\n                            return item.message_id !== messageId\n                        })\n                        this.setState({ messages })\n                        message.success(\"删除留言成功！\")\n                    } else {\n                        message.error(res.error)\n                    }\n                })\n            }\n        })\n    }\n\n    deleteReply(messageIndex, replyIndex) {\n        Modal.confirm({\n            title: '确定要删除吗？',\n            cancelText: '取消',\n            okText: \"确定\",\n            onOk: () => {\n                let { messages } = this.state\n                const topic_id = this.props.match.params.topic_id\n                const messageId = messages[messageIndex].message_id\n                const replyId = messages[messageIndex].replys[replyIndex].reply_id\n                const data = {\n                    topicId: topic_id,\n                    messageId,\n                    replyId\n                }\n                deleteReply(data).then(res => {\n                    if (res.code === 200) {\n                        messages[messageIndex].replys = messages[messageIndex].replys.filter(item => {\n                            return item.reply_id !== replyId\n                        })\n                        this.setState({ messages })\n                        message.success(\"删除回复成功！\")\n                    } else {\n                        message.error(res.error)\n                    }\n                })\n            }\n        })\n\n    }\n\n    //点赞\n    addHeart() {\n        const { has_heart } = this.state\n        const topic_id = this.props.match.params.topic_id\n        if (has_heart) {\n            deleteHeart({ topic_id }).then(res => {\n                if (res.code === 200) {\n                    message.success(\"已取消\")\n                    this.setState({ has_heart: false, heart_count: this.state.heart_count - 1 })\n                } else {\n                    message.error(res.error)\n                }\n            })\n        } else {\n            addHeart({ topic_id }).then(res => {\n                if (res.code === 200) {\n                    message.success(\"点赞成功\")\n                    this.setState({ has_heart: true, heart_count: this.state.heart_count + 1 })\n                } else {\n                    message.error(res.error)\n                }\n            })\n        }\n    }\n\n    render() {\n        const { content, title, introduce, nickname, last_id, last_title, created_time,\n            next_id, next_title, messages, browse_count, heart_count, has_heart,topic_id } = this.state\n        const username = this.props.match.params.username\n        let userInfo = { username: \"\" }\n        if (localStorage.getItem('userInfo')) {\n            userInfo = JSON.parse(localStorage.getItem('userInfo'))\n        }\n        return (\n            <div>\n                <Header {...this.props} />\n\n                <div className=\"container\">\n                    <div className=\"public-header\" style={{ marginBottom: 20 }}>\n                        <span className=\"header-name\">文章详情</span>\n                        <span>不要轻易放弃。学习成长的路上，我们长路漫漫，只因学无止境。 </span>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-8\" style={{ paddingRight: 0 }}>\n                            <div className=\"card\" style={{ marginBottom: 30 }}>\n                                <div className=\"article-body\">\n                                    <h4 className=\"article-title\">\n                                        <span>{title}</span>\n                                        {userInfo.username === username ? \n                                        <button className=\"btn btn-primary btn-sm\" onClick={()=>this.props.history.push(`/updateArticle/${username}/${topic_id}`)}>编辑</button>\n                                         : null}\n                                    </h4>\n                                    <p className=\"card-text\" >\n                                        <small className=\"text-muted\">\n                                            <span>{nickname}</span>\n                                            <span>{created_time}</span>\n                                            <span>已阅读:{browse_count}</span>\n                                            <span>点赞:{heart_count}</span>\n                                        </small>\n                                    </p>\n                                    <div className=\"abstract\">\n                                        简介： {introduce}\n                                    </div>\n                                    <div dangerouslySetInnerHTML={{ __html: content }}>\n                                    </div>\n\n                                    <div className=\"add-heart-wrapper\">\n                                        <button className={has_heart ? \"btn btn-secondary\" : \"btn btn-danger\"} onClick={this.addHeart.bind(this)}>\n                                            {has_heart ? '已点赞！' : \"点赞！\"}({heart_count})\n                                    </button>\n                                    </div>\n\n                                    <div style={{ marginBottom: 40 }}>\n                                        <div >\n                                            {last_id ? <Link to={`/articleDetail/${username}/${last_id}`}>上一篇：{last_title}</Link> : null}\n                                        </div>\n                                        <div>\n                                            {next_id ? <Link to={`/articleDetail/${username}/${next_id}`}>下一篇：{next_title}</Link> : null}\n                                        </div>\n                                    </div>\n\n                                    <div className=\"comment-title\">\n                                        文章评论\n                                </div>\n                                    <div>\n                                        {messages.map((item, index) => {\n                                            return (\n                                                <div className=\"message-item\" key={item.message_id}>\n                                                    <div className=\"message-user-info\">\n                                                        <div>\n                                                            <span className=\"message-user\">{item.author} </span>\n                                                            <span>@ {item.created_time} 留言：</span>\n                                                        </div>\n                                                        <div>\n                                                            {userInfo.username === item.author_id ?\n                                                                <button type=\"button\" className=\"btn btn-warning btn-sm\" style={{ marginRight: 20 }}\n                                                                    onClick={this.deleteMessage.bind(this, index)}>删除</button> : null\n                                                            }\n\n                                                            <img src={meida_url + item.avatar} alt=\"\" className=\"avatar\" />\n                                                        </div>\n\n                                                    </div>\n\n                                                    <div className=\"message-content\">\n                                                        {item.content}\n                                                        {item.showInput ?\n                                                            <button type=\"button\" className=\"btn btn-success btn-sm reply-btn\" onClick={this.showInput.bind(this, index)}>收起</button> :\n                                                            <button type=\"button\" className=\"btn btn-primary btn-sm reply-btn\" onClick={this.showInput.bind(this, index)}>回复</button>\n                                                        }\n\n                                                    </div>\n                                                    <div className=\"reply-wrapper\">\n                                                        {item.replys.map((replyItem, replyIndex) => {\n                                                            return (\n                                                                <div className=\"reply-item\" key={replyIndex}>\n                                                                    <div className='message-user-info'>\n                                                                        <div>\n                                                                            <span className=\"message-user\">{replyItem.author} </span>\n                                                                            <span>@ {replyItem.created_time} 回复：</span>\n                                                                        </div>\n                                                                        <div>\n                                                                            {userInfo.username === replyItem.author_id ?\n                                                                                <button type=\"button\" className=\"btn btn-warning btn-sm\" style={{ marginRight: 20 }}\n                                                                                    onClick={this.deleteReply.bind(this, index, replyIndex)}>删除</button> : null\n                                                                            }\n                                                                            <img src={meida_url + replyItem.avatar} alt=\"\" className=\"avatar\" />\n                                                                        </div>\n\n                                                                    </div>\n                                                                    <div className=\"reply-content\">\n                                                                        {replyItem.content}\n                                                                    </div>\n\n                                                                </div>\n                                                            )\n                                                        })}\n                                                    </div>\n                                                    {item.showInput ?\n                                                        <div>\n                                                            <textarea placeholder=\"回复\" className=\"reply-input\"\n                                                                onChange={(e) => this.inputReply(e, index)} value={item.replyContent}\n                                                            />\n                                                            <button type=\"button\" className=\"btn btn-success\" onClick={this.submitReply.bind(this, index)}>提交</button>\n                                                        </div>\n                                                        : null}\n\n                                                </div>\n                                            )\n                                        })}\n                                        {messages.length === 0 ?\n                                            <div style={{ textAlign: \"center\" }}>目前没有留言，快写下你的留言吧~</div> : null\n                                        }\n                                    </div>\n                                    <div className=\"reply-title\">在这添加你的留言！</div>\n                                    <textarea placeholder=\"留言\" className=\"reply-input\"\n                                        value={this.state.message_input}\n                                        onChange={(e) => this.setState({ message_input: e.target.value })}\n                                    />\n                                    <button type=\"button\" className=\"btn btn-success\"\n                                        onClick={this.submitMessage.bind(this)}>提交</button>\n\n                                </div>\n\n\n                            </div>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <Slide {...this.props}/>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DetailArticle","import { postMehotd, getMethod, deleteMethod, putMethod } from '../utils/utils'\n\nexport const host = 'http://xiaomile.cool/v1'\n// export const host = 'http://127.0.0.1:8000/v1'\n\n\nexport function testApi(data) {\n    return getMethod(`${host}/testApi`, data);\n}\n\n\n\n\n//修改用户信息\nexport function updateUser(data){\n    return putMethod(`${host}/users/${data.username}`,data)\n}\n\n//获取用户信息\nexport function getUser(data){\n    return getMethod(`${host}/users/${data.username}`)\n}\n\n// 上传头像\nexport function uploadImg(data){\n    return postMehotd(`${host}/users/${data.username}/avatar`,data.avatar);\n}\n\n// 注册\nexport function register(data){\n    return postMehotd(`${host}/users`,data);\n}\n\n// 登录\nexport function login(data){\n    return postMehotd(`${host}/token`,data);\n}\n\n\n//发表文章\nexport function submitArticle(data){\n    return postMehotd(`${host}/topics`,data);\n}\n//修改文章\nexport function updateArticle(data){\n    return putMethod(`${host}/topics`,data)\n}\n\n//获取文章详情\nexport function getArticleDetail(data,username){\n    return getMethod(`${host}/topics/${username}`,data)\n}\n\n//回复留言\nexport function replyMessage(data,topicId,messaegId){\n    return postMehotd(`${host}/messages/${topicId}/${messaegId}`,data)\n}\n//留言\nexport function submitMessage(data,topicId){\n    return postMehotd(`${host}/messages/${topicId}`,data)\n}\n\n//删除回复\nexport function deleteReply(data){\n    return deleteMethod(`${host}/messages/${data.topicId}/${data.messageId}/${data.replyId}`)\n}\n\n//删除留言\nexport function deleteMessage(data){\n    return deleteMethod(`${host}/messages/${data.topicId}/${data.messageId}`)\n}\n\n//点赞\nexport function addHeart(data){\n    return postMehotd(`${host}/topics/heart`,data)\n}\n\n//取消点赞\nexport function deleteHeart(data){\n    return deleteMethod(`${host}/topics/heart`,data)\n}\n\n\n//用户文章列表\nexport function topicList(data,username){\n    return getMethod(`${host}/topics/${username}`,data)\n}\n\n//删除文章\nexport function deleteTopcic(data,username){\n    return deleteMethod(`${host}/topics/${username}`,data)\n}\n\n//首页文章列表\nexport function homeTopicList(data){\n    return getMethod(`${host}/topics/home`,data)\n}\n\n//点击排行列表\nexport function topicBrowseRank(){\n    return getMethod(`${host}/topics/view_rank`)\n}\n\n//推荐文章列表\nexport function topicRecommend(){\n    return getMethod(`${host}/topics/recommend`)\n}\n\n//轮播\nexport function topicCarousel(){\n    return getMethod(`${host}/topics/carousel`)\n}\n\n//搜索\nexport function searchTopic(data){\n    return getMethod(`${host}/topics/search`,data)\n}\n","import axios from 'axios';\n\nexport const meida_url = 'http://xiaomile.cool/media/'\n// export const meida_url = 'http://127.0.0.1:8000/media/'\n\nexport function getMethod(url, data) {\n  return new Promise((resolve, reject) => {\n    const token = localStorage.token ? localStorage.token : '';\n    axios.get(url, { params: data, headers: { Authorization: token } }).then((res) => {\n      if (res !== undefined) {\n        resolve(res.data);\n      }\n    }).catch((err) => {\n      reject(err);\n    });\n\n  });\n}\n\nexport function deleteMethod(url, data) {\n  return new Promise((resolve, reject) => {\n    const token = localStorage.token ? localStorage.token : '';\n    axios.delete(url, { params: data, headers: { Authorization: token } }).then((res) => {\n      resolve(res.data);\n    }).catch((err) => {\n      reject(err);\n    });\n\n  });\n}\n\nexport function postMehotd(url, data,) {\n  return new Promise((resolve, reject) => {\n    const token = localStorage.token ? localStorage.token : '';\n    axios.post(url, data, { headers: { Authorization: token } }).then(res => {\n      resolve(res.data);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n}\n\nexport function putMethod(url, data,) {\n  return new Promise((resolve, reject) => {\n    const token = localStorage.token ? localStorage.token : '';\n    axios.put(url, data, { headers: { Authorization: token } }).then(res => {\n      resolve(res.data);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n}\n\n\n\nexport const ScrollTop = (number = 0, time) => {\n  if (!time) {\n    document.body.scrollTop = document.documentElement.scrollTop = number;\n    return number;\n  }\n  const spacingTime = 20; // 设置循环的间隔时间  值越小消耗性能越高\n  let spacingInex = time / spacingTime; // 计算循环的次数\n  let nowTop = document.body.scrollTop + document.documentElement.scrollTop; // 获取当前滚动条位置\n  let everTop = (number - nowTop) / spacingInex; // 计算每次滑动的距离\n  let scrollTimer = setInterval(() => {\n    if (spacingInex > 0) {\n      spacingInex--;\n      ScrollTop(nowTop += everTop);\n    } else {\n      clearInterval(scrollTimer); // 清除计时器\n    }\n  }, spacingTime);\n\n}\n","import React, { Component } from 'react'\nimport { Modal, Button, message } from 'antd'\nimport {login} from '../../servers/index'\nimport './index.css'\n\nexport default class Login extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: \"\",\n            password: \"\",\n        }\n    }\n\n\n\n    validate = (key, type) => {\n        let { registerFormStatus } = this.state\n        let flag = true\n        switch (key) {\n            case 'phone':\n                if (\n                    !/^[1][3-9][0-9]{9}$/.test(registerFormStatus[key].value) ||\n                    registerFormStatus[key].value === ''\n                ) {\n                    registerFormStatus[key].help = `必须为一个手机号码`\n                    registerFormStatus[key].status = 'error'\n                    flag = false\n                } else {\n                    if (type === 'login') {\n                        registerFormStatus[key].help = ''\n                        registerFormStatus[key].status = 'success'\n                    }\n\n                }\n                break\n            case 'code':\n                if (key === 'code' || key === 'captcha') {\n                    if (registerFormStatus[key].value.length === 6) {\n                        registerFormStatus[key].status = 'success'\n                        registerFormStatus[key].help = ''\n                    } else {\n                        registerFormStatus[key].status = 'error'\n                        registerFormStatus[key].help = '验证码为6位数'\n                        flag = false\n                    }\n                }\n                break\n            case 'password':\n                if (registerFormStatus[key].value.length >= 6) {\n                    registerFormStatus[key].status = 'success'\n                    registerFormStatus[key].help = ''\n                } else {\n                    registerFormStatus[key].status = 'error'\n                    registerFormStatus[key].help = '密码不能小于6位'\n                    flag = false\n                }\n                break\n            case 'confirmPassword':\n                if (\n                    registerFormStatus[key].value === registerFormStatus['password'].value && registerFormStatus[key].value.length >= 6\n                ) {\n                    registerFormStatus[key].status = 'success'\n                    registerFormStatus[key].help = ''\n                } else {\n                    registerFormStatus[key].status = 'error'\n                    registerFormStatus[key].help = '两次密码不一致'\n                    flag = false\n                }\n                break\n            case 'all':\n                if (!this.validate('phone') || !this.validate('password') || !this.validate('code') || !this.validate('confirmPassword')) {\n                    flag = false\n                }\n                break\n            default:\n                break\n        }\n        this.setState({ registerFormStatus })\n        return flag\n    }\n\n\n\n    login = () => {\n        const { username,password} = this.state\n\n        login({ username, password }).then(res => {\n            // console.log(res)\n            if (res.code === 200) {\n                const token = res.data.token\n                localStorage.setItem(\"token\", token)\n                const userInfo = {\n                    username:res.username,\n                    nickname:res.data.nickname,\n                    avatar:res.data.avatar\n                }\n                this.props.setUserInfo(userInfo)\n                localStorage.setItem(\"userInfo\", JSON.stringify(userInfo))\n\n                this.props.loginClose()\n                message.success('登录成功')\n            }else{\n                message.error(res.error)\n            }\n\n        })\n\n    }\n\n\n\n\n\n    render() {\n\n        let { username, password } = this.state\n        return (\n            <Modal\n                title=\"登录\"\n                width={350}\n                visible={this.props.loginVisiable}\n                onCancel={this.props.loginClose}\n                footer={null}\n            >\n                <div>\n                    <div className=\"form-item\">\n                        <span>账号：</span>\n                        <input type=\"text\" placeholder=\"请输入用户名\" className=\"form-input\" value={username}\n                            onChange={(e) => this.setState({ username: e.target.value })} \n                        />\n                    </div>\n                    <div className=\"form-item\">\n                        <span>密码：</span>\n                        <input type=\"password\" placeholder=\"请输入密码\" className=\"form-input\" value={password}\n                            onChange={(e) => this.setState({ password: e.target.value })}\n                        />\n                    </div>\n\n                    <Button\n                        type=\"primary\"\n                        block\n                        style={{ marginBottom: 10 }}\n                        loading={this.state.loginLoading}\n                        onClick={this.login}\n                    >登 录</Button>\n\n                    <div className='login-forget'>\n                        {/* <span >忘记密码？</span> */}\n                      \n\n                            <span onClick={()=>this.props.showRegister()}>注册</span>\n                        \n                    </div>\n\n                </div>\n            </Modal>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Modal, Button, message } from 'antd'\nimport { register } from '../../servers/index'\nimport './index.css'\n\nexport default class Register extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: \"\",\n            password2: \"\",\n            password1: \"\",\n            email: \"\",\n        }\n    }\n\n    \n    register(){\n        const {username,password1,password2,email} = this.state\n        const data = {\n            username: username,\n            password_1: password1,\n            password_2: password2,\n            email: email\n        }\n        register(data).then(res=>{\n            if (res.code === 200) {\n                const token = res.data.token\n                localStorage.setItem(\"token\", token)\n                const userInfo = {\n                    username:res.username,\n                    nickname:res.username,\n                    avatar:\"\"\n                }\n                this.props.setUserInfo(userInfo)\n                localStorage.setItem(\"userInfo\", JSON.stringify(userInfo))\n                this.props.registerClose()\n                message.success('注册成功')\n            }else{\n                message.error(res.error)\n            }\n        })\n    }\n\n\n    render() {\n\n        let { username, password1, password2, email } = this.state\n        return (\n            <Modal\n                title=\"注册\"\n                width={350}\n                visible={this.props.registerVisiable}\n                onCancel={this.props.registerClose}\n                footer={null}\n            >\n                <div className=\"register-wrapper\">\n                    <div className=\"form-item\">\n                        <span className=\"register-text\">账号：</span>\n                        <input type=\"text\" placeholder=\"请输入用户名\" className=\"register-form-input\" value={username}\n                            onChange={(e) => this.setState({ username: e.target.value })}\n                        />\n                    </div>\n                    <div className=\"form-item\">\n                        <span className=\"register-text\">密码：</span>\n                        <input type=\"password\" placeholder=\"请输入密码\" className=\"register-form-input\" value={password1}\n                            onChange={(e) => this.setState({ password1: e.target.value })}\n                        />\n                    </div>\n                    <div className=\"form-item\">\n                        <span className=\"register-text\">密码确认：</span>\n                        <input type=\"password\" placeholder=\"请确定密码\" className=\"register-form-input\" value={password2}\n                            onChange={(e) => this.setState({ password2: e.target.value })}\n                        />\n                    </div>\n                    <div className=\"form-item\">\n                        <span className=\"register-text\">邮箱：</span>\n                        <input type=\"email\" placeholder=\"请输入邮箱\" className=\"register-form-input\" value={email}\n                            onChange={(e) => this.setState({ email: e.target.value })}\n                        />\n                    </div>\n\n                    <Button\n                        type=\"primary\"\n                        block\n                        style={{ marginBottom: 10 }}\n                       \n                        onClick={this.register.bind(this)}\n                    >注册</Button>\n\n                    <div className='login-forget'>\n                        {/* <span >忘记密码？</span> */}\n\n\n                        {/* <span onClick={() => this.props.showRegister()}>注册</span> */}\n\n                    </div>\n\n                </div>\n            </Modal>\n        )\n    }\n}","import React, { Component } from 'react'\nimport './index.css'\n\nimport { Link } from 'react-router-dom'\nimport { Modal, message } from 'antd'\nimport Login from '../Login/index'\nimport Register from '../Register/index'\nimport { meida_url } from '../../utils/utils'\nimport default_avatar from '../../assets/imgs/default_avatar.jpg'\n\nexport default class Header extends Component {\n    constructor() {\n        super()\n        this.state = {\n            searchText: \"\",\n            userInfo: {\n                nickname: \"\",\n                avatar: \"\",\n            },\n            loginVisiable: false,\n            registerVisiable: false,\n            current: 'mail',\n        }\n    }\n    UNSAFE_componentWillMount() {\n        let userInfo = localStorage.getItem('userInfo')\n        if (userInfo) {\n            userInfo = JSON.parse(userInfo)\n            this.setState({ userInfo })\n        }\n\n    }\n\n    setUserInfo(userInfo) {\n        this.setState({ userInfo })\n    }\n\n    logout() {\n        Modal.confirm({\n            title: \"提示\",\n            content: \"确定要退出登录吗？\",\n            onOk: () => {\n                localStorage.removeItem(\"userInfo\")\n                localStorage.removeItem(\"token\")\n                window.location.href = '/'\n            }\n        })\n    }\n    changeAvatar(url) {\n        let { userInfo } = this.state\n        userInfo.avatar = url\n        this.setState({ userInfo })\n    }\n    //我的文章\n    toMyList() {\n        const userInfo = this.state.userInfo\n        if (userInfo.username) {\n            this.props.history.push('/article/' + userInfo.username)\n        } else {\n            message.info('请先登录！')\n        }\n    }\n    //发表文章\n    toPushlish() {\n        const userInfo = this.state.userInfo\n        if (userInfo.username) {\n            this.props.history.push('/publish')\n        } else {\n            message.info('请先登录！')\n        }\n    }\n\n    onSearch() {\n        const { searchText } = this.state\n        if (searchText.trim() === \"\") {\n            message.info('搜索内容不能为空！', 1)\n            return\n        }\n        const url = '/search?key=' + searchText\n        window.open(url, '_blank')\n    }\n    showRegister() {\n        this.setState({ loginVisiable: false, registerVisiable: true })\n    }\n\n    render() {\n        const userInfo = this.state.userInfo\n        const { searchText } = this.state\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                <div className=\"container\">\n                    <Link className=\"navbar-brand\" to=\"\">小米乐</Link>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"\">首页 <span className=\"sr-only\">(current)</span></Link>\n                            </li>\n                            {/* <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/publish\">文章列表</Link>\n                            </li> */}\n                            <li className=\"nav-item\" onClick={this.toMyList.bind(this)}>\n                                <span className=\"nav-link\">我的文章</span>\n                            </li>\n                            <li className=\"nav-item\" onClick={this.toPushlish.bind(this)}>\n                                <span className=\"nav-link\" >发表文章</span>\n                            </li>\n                            <form className=\"form-inline \" style={{ paddingBottom: 0 }}>\n                                <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"搜索\" value={searchText}\n                                    onChange={(e) => this.setState({ searchText: e.target.value })}\n                                />\n                                <div className=\"btn btn-secondary my-2 my-sm-0\" onClick={this.onSearch.bind(this)}>搜索</div>\n                            </form>\n                        </ul>\n                        {userInfo.nickname ?\n                            <ul className=\"nav navbar-nav navbar-right\">\n                                <li className=\"userInfo-wrapper\" onClick={() => this.props.history.push(`/userInfo/${userInfo.username}`)}>\n                                    <span> <img src={userInfo.avatar ? meida_url + userInfo.avatar : default_avatar} alt=\"\" className=\"avatar\" /></span>\n                                    <span className=\"nav-link\" >{userInfo.nickname}</span>\n                                </li>\n                                <li className=\"nav-item\" onClick={this.logout.bind(this)}>\n                                    <span className=\"nav-link\" >登出</span>\n                                </li>\n                            </ul> :\n\n                            <ul className=\"nav navbar-nav navbar-right\">\n                                <li className=\"nav-item\" onClick={() => this.setState({ loginVisiable: true })}>\n                                    <span className=\"nav-link\" >登录</span>\n                                </li>\n                                <li className=\"nav-item\" onClick={() => this.setState({ registerVisiable: true })}>\n                                    <span className=\"nav-link\" >注册</span>\n                                </li>\n                            </ul>\n                        }\n\n\n                    </div>\n                </div>\n                <Login loginVisiable={this.state.loginVisiable}\n                    loginClose={() => this.setState({ loginVisiable: false })}\n                    setUserInfo={this.setUserInfo.bind(this)}\n                    showRegister={this.showRegister.bind(this)}\n                />\n                <Register registerVisiable={this.state.registerVisiable}\n                    registerClose={()=> this.setState({registerVisiable:false})}\n                    setUserInfo={this.setUserInfo.bind(this)}\n                />\n            </nav>\n        )\n    }\n}","module.exports = __webpack_public_path__ + \"static/media/default_avatar.3e2de2c4.jpg\";","import React, { Component } from 'react'\nimport './index.css'\nimport { topicBrowseRank, topicRecommend } from '../../servers/index'\nimport default_img from '../../assets/imgs/banner02.jpg'\n\n// function entityToString(entity) {\n//     var div = document.createElement('div');\n//     div.innerHTML = entity;\n//     var res = div.innerText || div.textContent;\n//     return res;\n// }\n\n\nexport default class Slide extends Component {\n    constructor() {\n        super()\n        this.state = {\n            rankList: [],\n            recommendList: [],\n        }\n    }\n    componentDidMount() {\n        this.getTopicBrowseRank()\n        this.getTopicRecommend()\n    }\n    getTopicBrowseRank() {\n        topicBrowseRank().then(res => {\n            if (res.code === 200) {\n                this.setState({ rankList: res.data.topics })\n            }\n        })\n    }\n    getTopicRecommend() {\n        topicRecommend().then(res => {\n            if (res.code === 200) {\n                this.setState({ recommendList: res.data.topics })\n            }\n        })\n    }\n    render() {\n        const { rankList, recommendList } = this.state\n        return (\n            <div>\n                <div className=\"card\" style={{ marginBottom: '30px' }}>\n                    <div className=\"card-body\">\n                        <div className=\"card-title\">\n                            <p className=\"main-title\">特别推荐</p>\n                            <p className=\"line\"></p>\n                        </div>\n                        {recommendList.map((item, index) => {\n\n                            return (\n                                <div className=\"card-item\" key={item.id}>\n                                    <img src={item.images[0] ? item.images[0] : default_img} alt=\"\" className=\"figure-img img-fluid w-100\" />\n                                    <div className=\"card-item-info\">\n                                        <div className=\"card-text info\">\n                                            <p className=\"recommend-title\">{item.title}</p>\n                                            <span className=\"read-btn\"\n                                                onClick={() => this.props.history.push(`/articleDetail/${item.username}/${item.id}`)}\n                                            >阅读</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })}\n\n\n                    </div>\n                </div>\n\n                <div className=\"card\" style={this.props.hideRank ? { display: \"none\" } : { marginBottom: '30px' }}>\n                    <div className=\"card-body\">\n                        <div className=\"card-title\">\n                            <p className=\"main-title\">点击排行</p>\n                            <p className=\"line\"></p>\n                        </div>\n                        {rankList.map((item, index) => {\n\n                            if (index === 0) {\n                                return (\n                                    <div className=\"card-item\" key={item.id}>\n                                        <img src={item.images[0] ? item.images[0] : default_img} alt=\"\" className=\"figure-img img-fluid\" />\n                                        <div className=\"card-item-info-rank\">\n                                            <div className=\"info\" onClick={() => this.props.history.push(`/articleDetail/${item.username}/${item.id}`)}>{item.title}</div>\n                                        </div>\n                                    </div>\n                                )\n                            } else {\n                                return (\n                                    <div className=\"card-item\" key={item.id}>\n                                        <div className=\"card-item-small\">\n                                            <div className=\"img-wrapper\">\n                                                <img src={item.images[0] ? item.images[0] : default_img} alt=\"\" />\n                                            </div>\n                                            <div className=\"card-item-small-info\">\n                                                <div onClick={() => this.props.history.push(`/articleDetail/${item.username}/${item.id}`)} className=\"card-item-small-info-title\">{item.title}</div>\n                                                <div className=\"time\">\n                                                    {item.created_time}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            }\n                        })}\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}","module.exports = __webpack_public_path__ + \"static/media/banner02.5fc18f28.jpg\";"],"sourceRoot":""}